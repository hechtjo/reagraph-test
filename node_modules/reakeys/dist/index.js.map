{"version":3,"file":"index.js","sources":["../src/useHotkeyState.ts","../src/useHotkeys.ts","../src/utils.ts"],"sourcesContent":["import { RefObject, useEffect, useState } from 'react';\nimport Mousetrap, {\n  ExtendedKeyboardEvent,\n  MousetrapInstance,\n  MousetrapStatic,\n} from 'mousetrap';\n\nexport interface HotkeyShortcuts {\n  name: string;\n  category?: string;\n  description?: string;\n  keys: string | string[];\n  ref?: RefObject<HTMLElement | null>;\n  hidden?: boolean;\n  disabled?: boolean;\n  callback: (e: ExtendedKeyboardEvent, combo: string) => void;\n  action?: 'keypress' | 'keydown' | 'keyup';\n}\n\n/**\n * Creates a global state singleton.\n */\nconst createStateHook = () => {\n  const mousetraps = new Map<\n    HTMLElement | undefined,\n    MousetrapStatic | MousetrapInstance\n  >();\n  let keys: HotkeyShortcuts[] = [];\n\n  const bindKeys = (nextKeys: HotkeyShortcuts[]) => {\n    nextKeys.forEach((k) => {\n      if (k.disabled) {\n        return;\n      }\n\n      if (k.ref) {\n        if (!k.ref.current) {\n          // exit early if ref is provided but null\n          // we do not want to attach global event handlers in this case\n          return;\n        }\n\n        const element = k.ref.current;\n\n        if (!mousetraps.has(element)) {\n          mousetraps.set(element, new Mousetrap(element));\n        }\n\n        mousetraps.get(element)!.bind(k.keys, k.callback, k.action);\n      } else {\n        if (!mousetraps.get(undefined)) {\n          mousetraps.set(undefined, Mousetrap);\n        }\n\n        mousetraps.get(undefined)!.bind(k.keys, k.callback, k.action);\n      }\n    });\n  };\n\n  const addKeys = (nextKeys: HotkeyShortcuts[]) => {\n    keys = [...keys, ...nextKeys];\n\n    bindKeys(nextKeys);\n  };\n\n  const removeKeys = (nextKeys: HotkeyShortcuts[]) => {\n    // remove keys from the array\n    keys = keys.filter((k) => !nextKeys.includes(k));\n\n    // unbind mousetrap events\n    nextKeys.forEach((k) => {\n      if (k.ref) {\n        if (!k.ref.current) {\n          return;\n        }\n\n        mousetraps.get(k.ref.current)?.unbind(k.keys, k.action);\n      } else {\n        mousetraps.get(undefined)?.unbind(k.keys, k.action);\n      }\n    });\n\n    // drop mousetrap instances that have no keys attached anymore\n    for (const [element] of mousetraps) {\n      if (element === undefined) {\n        if (keys.some((k) => k.ref === undefined)) {\n          continue;\n        }\n      } else {\n        if (keys.some((k) => k.ref?.current === element)) {\n          continue;\n        }\n      }\n\n      mousetraps.delete(element);\n    }\n\n    // re-bind keys to restore listeners that were overwritten by the ones we just removed\n    bindKeys(keys);\n  };\n\n  return () => {\n    const [state, setState] = useState<HotkeyShortcuts[]>([]);\n\n    useEffect(() => {\n      setState(keys);\n    }, []);\n\n    return [state, addKeys, removeKeys] as const;\n  };\n};\n\nexport const useHotkeyState = createStateHook();\n","import { useLayoutEffect, useMemo } from 'react';\nimport { HotkeyShortcuts, useHotkeyState } from './useHotkeyState';\n\nexport const useHotkeys = (shortcuts?: HotkeyShortcuts[]) => {\n  const [keys, addKeys, removeKeys] = useHotkeyState();\n\n  useLayoutEffect(() => {\n    if (shortcuts) {\n      addKeys(shortcuts);\n    }\n\n    return () => {\n      if (shortcuts) {\n        removeKeys(shortcuts);\n      }\n    };\n  }, [addKeys, removeKeys, shortcuts]);\n\n  return useMemo(\n    () =>\n      keys.reduce<HotkeyShortcuts[]>((agg, cur) => {\n        if (!agg.find((a) => a.keys === cur.keys && a.ref && cur.ref)) {\n          agg.push(cur);\n        }\n        return agg;\n      }, []),\n    [keys]\n  );\n};\n","let isMac: boolean = false;\ntry {\n  if (navigator) isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n} catch (e) {\n  console.warn(e);\n}\n\nexport const MODIFIER_KEY = isMac ? '⌘' : 'CTRL';\n\nexport function getHotkeyText(hotkey: string) {\n  return hotkey\n    .replace('modifier', MODIFIER_KEY)\n    .replace('mod', MODIFIER_KEY)\n    .replace('shift', '⇧');\n}\n"],"names":[],"mappings":"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"}